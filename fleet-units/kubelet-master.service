[Unit]
Description=Kubernetes Master
Requires=etcd2.service
Requires=vault.service
After=etcd2.service
After=vault.service

[Service]
Environment=KUBELET_VERSION="v1.2.4_coreos_cni.0"
Environment=RKT_OPTS="--inherit-env"
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/bash -c "\
  mkdir --parents /etc/kubernetes/ssl; \
  export VAULT_ADDR=`etcdctl get $(etcdctl ls /vaults-unsealed | shuf -n 1)`
  VAULT_TOKEN=`curl -sSL -XPOST -d '{"app_id":"${VAULT_APP_ID}", "user_id": "certificate-generator"}' "http://${VAULT_ADDR}:8200/v1/auth/app-id/login" | jq -r '.auth.client_token'`
  vault auth ${VAULT_TOKEN}
  vault write -format=json pki-intermediate/issue/kube-apiserver \
    common_name=kube-apiserver \
    ip_sans=${COREOS_PRIVATE_IPV4},kube-apiserver.local,kube-apiserver \
    | tee \
    >(jq -r .data.certificate > /etc/kubernetes/ssl/kube-apiserver.pem) \
    >(jq -r .data.issuing_ca > /etc/kubernetes/ssl/ca.pem) \
    >(jq -r .data.private_key > /etc/kubernetes/ssl/kube-apiserver-key.pem)"
ExecStartPre=/usr/bin/mkdir --parents /etc/kubernetes/cni/net.d
ExecStartPre=/usr/bin/bash -c "\
  echo '{\"name\":\"calico\",\"type\":\"flannel\",\"delegate\":{\"type\":\"calico\",\"etcd_endpoints\":\"http://127.0.0.1:2379\",\"log_level\":\"none\",\"log_level_stderr\":\"info\",\"hostname\":\"${kube-master.cluster.local}\",\"policy\":{\"type\":\"k8s\",\"k8s_api_root\":\"http://127.0.0.1:8080/api/v1/\"}}}' \
  > /etc/kubernetes/cni/net.d/10-calico.conf"
ExecStartPre=/usr/bin/sh -c "\
  for manifest in kube-apiserver kube-controller-manager kube-proxy kube-scheduler policy-agent ; do \
    wget "https://raw.githubusercontent.com/brandfolder/gcp-terraform/master/manifests/$manifest.yaml" -o "/etc/kubernetes/manifests/$manifest.yaml"; \
  done"
ExecStart=/usr/lib/coreos/kubelet-wrapper \
  --api-servers=http://127.0.0.1:8080 \
  --network-plugin-dir=/etc/kubernetes/cni/net.d \
  --network-plugin=cni \
  --register-schedulable=false \
  --allow-privileged=true \
  --config=/etc/kubernetes/manifests \
  --hostname-override=${COREOS_PRIVATE_IPV4} \
  --cluster-dns=${COREOS_PRIVATE_IPV4} \
  --cluster-domain=cluster.local
ExecStartPost=/usr/bin/etcdctl set skydns/local/services/kube-apiserver "{\"host\":\"${COREOS_PRIVATE_IPV4}\","port":8080}"
ExecStartPost=/usr/bin/curl "http://127.0.0.1:8080/version"
ExecStartPost=/usr/bin/curl -H "Content-Type: application/json" -XPOST -d'{"apiVersion":"v1","kind":"Namespace","metadata":{"name":"kube-system"}}' "http://127.0.0.1:8080/api/v1/namespaces"
ExecStartPost=/usr/bin/curl -H "Content-Type: application/json" -XPOST -d'{"apiVersion":"v1","kind":"Namespace","metadata":{"name":"calico-system"}}' "http://127.0.0.1:8080/api/v1/namespaces"
ExecStartPost=/usr/bin/curl -H "Content-Type: application/json" -XPOST -d'{"kind":"ThirdPartyResource","apiVersion":"extensions/v1beta1","metadata":{"name":"network-policy.net.alpha.kubernetes.io"},"description":"Specification for a network isolation policy","versions":[{"name":"v1alpha1"}]}' "http://127.0.0.1:8080/apis/extensions/v1beta1/namespaces/default/thirdpartyresources"
Restart=always
RestartSec=10

[X-Fleet]
MachineMetadata=role=kubernetes
MachineMetadata=type=master
